# -*- coding: utf-8 -*-
"""
Created on Sat Mar 11 19:48:18 2023

@author: fanha
"""
import pandas as pd
import numpy as np

def Load_Training_data(responseTime_sheet_file='DIDUNAS_main-study_responseTimeVsPvalue.xlsx',
                       accuracy_sheet_file='DIDUNAS_main-study_errorRateVsPvalue.xlsx', num_tasks=10):

    responseTime_sheet = pd.read_excel(responseTime_sheet_file, engine='openpyxl')
    accuracy_sheet = pd.read_excel(accuracy_sheet_file, engine='openpyxl')

    responseTime_mat = responseTime_sheet.loc[:, :]
    accuracy_mat = accuracy_sheet.loc[:, :]

    num_users = responseTime_mat.shape[0]

    X = np.zeros( (num_users, num_tasks) )

    for u in range(num_users):
        for t in range(num_tasks):
            X[u, t] = accuracy_mat.loc[u][t+1]
    
    y = responseTime_mat['p-value']
    yr= np.copy(y)

    threshold = 0.192
    yc = np.copy(y)
    yc[yc>=threshold] = 1
    yc[yc<threshold] = 0
    
    return X, yc, yr

from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import AdaBoostClassifier 
from sklearn.decomposition import PCA
from imblearn.pipeline import Pipeline
from sklearn.model_selection import KFold,StratifiedKFold
from imblearn.over_sampling import SMOTE
import pickle


def Model_training(X_train, y_train, SMOTE_sam=0.4, num_features=6, model_version=202303):

   # define the model
   log_classifier = LogisticRegression(penalty='l2', max_iter=2000)
   model = AdaBoostClassifier(
       log_classifier,
       n_estimators = 500,
       )

   over = SMOTE(sampling_strategy=SMOTE_sam)
   
   ABC_pipe = Pipeline([ ('over', over), ('pca', PCA(num_features)), ('AdaBoostClassifier', model) ])
   
   # execute search
   ensemble_model = ABC_pipe.fit(X_train, y_train)
   
   pickle.dump(ensemble_model, open('DIDUNAS_predictive_model'+str(model_version)+'.pkl','wb'))
   
   return ensemble_model
   
if __name__ == '__main__':
    X, yc, yr = Load_Training_data(responseTime_sheet_file='DIDUNAS_main-study_responseTimeVsPvalue.xlsx',
                       accuracy_sheet_file='DIDUNAS_main-study_errorRateVsPvalue.xlsx', 
                       num_tasks=10)
    
    Model_training(X, yc)
